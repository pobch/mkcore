image: docker:dind

stages:
  - build
  - deploy

variables:
  DOCKER_DRIVER: overlay
  KUBECTL_VERSION: v1.9.3
  VAULT_ADDR: https://vault.studiotwist.co
  APP_NAMESPACE: makrub

.job_template: &job_definition
  services:
    - docker:dind
  tags:
    - docker
  before_script:
    - export IMAGE_TAG=$(if [ ! -z "$CI_COMMIT_TAG" ]; then echo "$CI_COMMIT_TAG"; else echo "latest"; fi)
    - export APP_IMAGE="$CI_REGISTRY_IMAGE:$IMAGE_TAG"

.deploy_template:
  script: &deploy_definition
    - apk add --update --no-cache curl gettext
    - curl -LO "https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl"
    - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
    - mkdir -p $HOME/.kube
    - mkdir -p generated

    - docker run
        -e VAULT_TOKEN=$VAULT_TOKEN
        -e VAULT_ADDR=$VAULT_ADDR
        vault kv get -field=data secret/${APP_NAMESPACE}/kubeconfig > $HOME/.kube/config

    - envsubst < templates/deployment.yml > generated/deployment.yml
    - kubectl apply -f generated/deployment.yml

build_image:
  <<: *job_definition
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $APP_IMAGE .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

deploy_dev:
  <<: *job_definition
  stage: deploy
  variables:
    APP_ID: mkcore-dev
    APP_DOMAIN: dev-core.makrub.com
    APP_PORT: 8000
  script: *deploy_definition
  only:
    - develop

deploy_prod:
  <<: *job_definition
  stage: deploy
  variables:
    APP_ID: mkcore-prod
    APP_DOMAIN: core.makrub.com
    APP_PORT: 8000
  script: *deploy_definition
  when: manual
  only:
    - master
